from pydantic import BaseModel, Field
from typing import List, Optional, Dict


class Product(BaseModel):
    """–¢–æ–≤–∞—Ä –≤ –¢–û–ü-5"""

    sku: str = Field(..., description="–ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞")
    title: str = Field(..., description="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
    qty: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü")
    revenue: float = Field(..., description="–í—ã—Ä—É—á–∫–∞ –æ—Ç —Ç–æ–≤–∞—Ä–∞")
    revenue_pct: float = Field(..., description="–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –æ–±—â–µ–π –≤—ã—Ä—É—á–∫–∏")


class Anomaly(BaseModel):
    """–ê–Ω–æ–º–∞–ª–∏—è –≤ –¥–∞–Ω–Ω—ã—Ö"""

    date: str = Field(..., description="–î–∞—Ç–∞ –∞–Ω–æ–º–∞–ª–∏–∏ (YYYY-MM-DD)")
    type: str = Field(..., description="–¢–∏–ø –∞–Ω–æ–º–∞–ª–∏–∏: 'spike' –∏–ª–∏ 'drop'")
    change_pct: float = Field(..., description="–ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è")
    value: float = Field(..., description="–ó–Ω–∞—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫–∏")


class PlatformStats(BaseModel):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ"""

    revenue: float = Field(..., description="–í—ã—Ä—É—á–∫–∞")
    orders: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤")
    revenue_pct: float = Field(..., description="–ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –æ–±—â–µ–π –≤—ã—Ä—É—á–∫–∏")


class MetaInfo(BaseModel):
    """–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ—Ç—á—ë—Ç–∞"""

    source: str = Field(..., description="–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö")
    mode: str = Field(..., description="–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã")
    period: str = Field(..., description="–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞")
    period_start: str = Field(..., description="–ù–∞—á–∞–ª–æ –ø–µ—Ä–∏–æ–¥–∞")
    period_end: str = Field(..., description="–ö–æ–Ω–µ—Ü –ø–µ—Ä–∏–æ–¥–∞")
    rows_processed: int = Field(..., description="–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫")
    has_anomalies: bool = Field(..., description="–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∞–Ω–æ–º–∞–ª–∏–∏")


class AnalyzeResponse(BaseModel):
    """–û—Ç–≤–µ—Ç API /analyze"""

    revenue: float = Field(..., description="–í—ã—Ä—É—á–∫–∞", example=122000.0)
    orders: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤", example=356)
    avg_check: float = Field(..., description="–°—Ä–µ–¥–Ω–∏–π —á–µ–∫", example=343.0)
    commission: float = Field(..., description="–ö–æ–º–∏—Å—Å–∏—è", example=18300.0)
    profit: float = Field(..., description="–ü—Ä–∏–±—ã–ª—å", example=103700.0)

    # –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—à–ª–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
    revenue_change_pct: Optional[float] = Field(
        None, description="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã—Ä—É—á–∫–∏ (%)", example=-15.0
    )
    orders_change_pct: Optional[float] = Field(
        None, description="–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ (%)", example=-8.0
    )
    avg_check_change_pct: Optional[float] = Field(
        None, description="–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ —á–µ–∫–∞ (%)", example=-7.0
    )

    # –¢–û–ü-5 —Ç–æ–≤–∞—Ä–æ–≤
    top5: List[Product] = Field(..., description="–¢–æ–ø-5 —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É")

    # –°–æ–≤–µ—Ç—ã
    tips: List[str] = Field(..., description="–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã")

    # –ê–Ω–æ–º–∞–ª–∏–∏ (NEW)
    anomalies: List[Anomaly] = Field(default=[], description="–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–Ω–æ–º–∞–ª–∏–∏")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º (NEW)
    platform_stats: Dict[str, PlatformStats] = Field(
        default={}, description="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º"
    )

    # –ì—Ä–∞—Ñ–∏–∫
    chart_png_base64: str = Field(..., description="PNG-–≥—Ä–∞—Ñ–∏–∫ –≤ base64")

    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    meta: MetaInfo = Field(..., description="–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ—Ç—á—ë—Ç–∞")

    class Config:
        json_schema_extra = {
            "example": {
                "revenue": 122000.0,
                "orders": 356,
                "avg_check": 343.0,
                "commission": 18300.0,
                "profit": 103700.0,
                "revenue_change_pct": -15.0,
                "orders_change_pct": -8.0,
                "avg_check_change_pct": -7.0,
                "top5": [
                    {
                        "sku": "WB123",
                        "title": "–§—É—Ç–±–æ–ª–∫–∞ –±–µ–ª–∞—è",
                        "qty": 120,
                        "revenue": 39040.0,
                        "revenue_pct": 32.0,
                    }
                ],
                "tips": [
                    "‚ö†Ô∏è –ü—Ä–æ–¥–∞–∂–∏ —É–ø–∞–ª–∏ –Ω–∞ 15% ‚Äî –ø—Ä–æ–≤–µ—Ä—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º—ã.",
                    "üèÜ –õ—É—á—à–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞: Wildberries (65% –≤—ã—Ä—É—á–∫–∏)",
                ],
                "anomalies": [
                    {
                        "date": "2025-08-15",
                        "type": "drop",
                        "change_pct": -35.2,
                        "value": 8500.0,
                    }
                ],
                "platform_stats": {
                    "Wildberries": {
                        "revenue": 79300.0,
                        "orders": 231,
                        "revenue_pct": 65.0,
                    },
                    "Ozon": {"revenue": 42700.0, "orders": 125, "revenue_pct": 35.0},
                },
                "chart_png_base64": "iVBORw0KGgoAAAANSUhEUg...",
                "meta": {
                    "source": "CSV",
                    "mode": "manual",
                    "period": "week",
                    "period_start": "2025-08-01",
                    "period_end": "2025-08-07",
                    "rows_processed": 50,
                    "has_anomalies": True,
                },
            }
        }
